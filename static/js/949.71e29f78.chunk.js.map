{"version":3,"file":"static/js/949.71e29f78.chunk.js","mappings":"2OAEA,MAAMA,EAAuB,CAC3B,CAAE,KAAQ,OAAQ,MAAS,MAAO,MAAS,GAC3C,CAAE,KAAQ,OAAQ,MAAS,MAAO,MAAS,QAC3C,CAAE,KAAQ,OAAQ,MAAS,MAAO,MAAS,QAC3C,CAAE,KAAQ,OAAQ,MAAS,MAAO,MAAS,OAC3C,CAAE,KAAQ,OAAQ,MAAS,MAAO,MAAS,QAC3C,CAAE,KAAQ,OAAQ,MAAS,MAAO,MAAS,MAC3C,CAAE,KAAQ,OAAQ,MAAS,MAAO,MAAS,QAC3C,CAAE,KAAQ,OAAQ,MAAS,MAAO,MAAS,QAC3C,CAAE,KAAQ,OAAQ,MAAS,MAAO,MAAS,QAC3C,CAAE,KAAQ,OAAQ,MAAS,MAAO,MAAS,QAC3C,CAAE,KAAQ,OAAQ,MAAS,MAAO,MAAS,QAC3C,CAAE,KAAQ,OAAQ,MAAS,MAAO,MAAS,QAC3C,CAAE,KAAQ,OAAQ,MAAS,MAAO,MAAS,QAC3C,CAAE,KAAQ,OAAQ,MAAS,MAAO,MAAS,SAC3C,CAAE,KAAQ,OAAQ,MAAS,MAAO,MAAS,QAC3C,CAAE,KAAQ,OAAQ,MAAS,MAAO,MAAS,QAC3C,CAAE,KAAQ,OAAQ,MAAS,MAAO,MAAS,OAC3C,CAAE,KAAQ,OAAQ,MAAS,MAAO,MAAS,QAIvCC,EAAsC,CAC1CC,IAAK,EAAGC,IAAK,EAAGC,IAAK,EAAGC,IAAK,EAAGC,IAAK,EAAGC,IAAK,EAC7CC,IAAK,EAAGC,IAAK,EAAGC,IAAK,EAAGC,IAAK,GAAIC,IAAK,GAAIC,IAAK,I,wBCnBjD,MAAMC,EAAgBA,CAACC,EAAaC,IAC9BD,IAAQC,EAAe,UACpBD,EAAM,IAAS,UAAY,UAwC9BE,EAAuBA,CAC3BC,EACAC,KAEA,MAEMC,GAFMF,EAAMG,eAAe,CAAEC,WAAY,GAAK,IACxCJ,EAAMG,eAAe,CAAEC,WAAY,GAAK,KACzB,EACrBC,EAAKL,EAAMG,eAAe,CAAEG,WAAY,GAAK,GAE7CC,EAAKF,EAAK,GAEVG,EAAQD,EADM,EAWpB,MAAO,CACL,CACEE,KAAM,OACNC,MAAO,CAAEC,GAAIT,EAAMU,GAhBZP,EAAK,GAgBWQ,GAAIX,EAAMK,MACjCO,MAAO,CAAEC,OAAQ,OAAQC,UAAW,GACpCC,QAAQ,GAEV,CACER,KAAM,OACNS,MAjBelB,EAAMG,eAAe,CAAEC,WAAY,GAAK,GACxCJ,EAAMG,eAAe,CAAEC,WAAY,GAAK,KACd,EAgBzCe,IAAKX,EACLM,MAAO,CAAEM,KAAM,OAAQC,KAAM,OAAQC,KAAM,uBAAwBC,UAAW,WAEhF,CACEd,KAAM,OACNS,MAnBelB,EAAMG,eAAe,CAAEC,WAAY,GAAK,IACxCJ,EAAMG,eAAe,CAAEC,WAAY,GAAKH,EAAc,IAC5B,EAkBzCkB,IAAKX,EACLM,MAAO,CAAEM,KAAM,OAAQC,KAAM,OAAQC,KAAM,uBAAwBC,UAAW,aAK9EC,EAAmBA,CACvBC,EACAC,EACAC,KAEO,CACLC,QAAS,OACTC,gBAAiB,OACjBC,YAAa,OACbC,YAAa,EACbC,aAAc,EACdC,QAAS,CAAC,EAAG,IACbC,UAAW,CAAEC,MAAO,OAAQC,WAAY,QACxCC,aAAc,0CACdC,UAAYC,IACV,MAAMC,EAAMD,EAAOE,UACnB,MAAM,GAANC,OAAUf,EAAUa,GAAI,KAAAE,OAAIjB,EAAOe,GAAI,oBAAAE,OAAmBhB,EAAOc,GAAKG,qBAKtEC,EAAiBA,CAACnB,EAAkBoB,IACjC,CACL,CACEpC,KAAM,WACNqC,KAAMrB,EACNsB,SAAU,CAAEC,MAAM,GAClBC,SAAU,CAAED,MAAM,GAClBE,UAAW,CAAEC,SAAU,GAAIhB,MAAO,OAAQiB,OAAQ,GAAIhB,WAAY,SAEpE,CACE3B,KAAM,WACNqC,KAAMD,EACNE,SAAU,CACRC,MAAM,EACNK,gBAAgB,EAChBC,OAAQ,EACRC,UAAW,CAAEpB,MAAO,QACpBqB,SAAWhB,GAA+B,KAAfK,EAAML,IAEnCS,SAAU,CAAED,MAAM,GAClBE,UAAW,CAAEF,MAAM,EAAOG,SAAU,GAAIhB,MAAO,OAAQiB,OAAQ,GAAIhB,WAAY,QAC/EqB,SAAU,WAKVC,EAAmBhC,IACvB,MAAM5B,EAAS6D,KAAKC,OAAOlC,GAGrBmC,EAAkC,CACtCpD,KAAM,MACNqC,KAAMpB,EACNoC,SAAU,MACVC,eAAgB,MAChBC,UAAW,CACT7B,MAAO,UACPH,aAAc,CAAC,EAAG,EAAG,EAAG,GACxBiC,YAAa,mBACbC,WAAY,GAEdC,SAAU,CACRH,UAAW,CAAE7B,MAAO,YAEtBiC,EAAG,GAICC,EAAuC,GAC7C,IAAK,IAAIC,EAAI,EAAGA,EAAI5C,EAAO4B,OAAS,EAAGgB,IAAK,CAC1C,MAAMC,EAAa3E,EAAc8B,EAAO4C,GAAIxE,GACtC0E,EAAa5E,EAAc8B,EAAO4C,EAAI,GAAIxE,GAEhDuE,EAAaI,KAAK,CAChBhE,KAAM,OACNqC,KAAM,CACJ,CAACwB,EAAG5C,EAAO4C,IACX,CAACA,EAAI,EAAG5C,EAAO4C,EAAI,KAErBI,YAAY,EACZnB,UAAW,CACToB,MAAO,EACPxC,MAAO,IAAIyC,EAAAA,GAAAA,GAAuB,EAAG,EAAG,EAAG,EAAG,CAC5C,CAAEC,OAAQ,EAAG1C,MAAOoC,GACpB,CAAEM,OAAQ,EAAG1C,MAAOqC,MAGxBJ,EAAG,GAEP,CAyCA,OAtCAC,EAAaI,KAAK,CAChBhE,KAAM,UACNqC,KAAMpB,EAAOoD,IAAI,CAACC,EAAGvC,IAAQ,CAACA,EAAKuC,IACnCC,OAAQ,SACRC,WAAY,GACZjB,UAAW,CACTkB,QAAS,EACT/C,MAAQgD,GAAWvF,EAAcuF,EAAEC,MAAM,GAAItF,GAC7CgC,YAAa,OACbC,YAAa,GAEfqC,EAAG,EACHiB,MAAO,CACLrC,MAAM,EACNS,SAAU,MACVN,SAAU,GACVf,WAAY,OACZE,UAAY6C,GAAWA,EAAEC,MAAM,GAAGzC,oBAKtC0B,EAAaI,KAAK,CAChBhE,KAAM,UACNqC,KAAMpB,EAAOoD,IAAI,CAACC,EAAGvC,KAAG,CACtB4C,MAAO,CAAC5C,EAAKuC,GACbM,MAAO,CACLrC,MAAM,EACNS,SAAU,MACVN,SAAU,GACVf,WAAY,OACZE,UAAWA,IAAOyC,EAAI,EAAIA,EAAEpC,iBAAmB,OAGnDqC,OAAQ,OACRZ,EAAG,IAGE,CAACP,KAAcQ,IAWlBiB,EAAoBC,IAKD,IALE,MACzB1C,EAAK,OACLpB,EAAM,OACNC,EAAM,UACNC,GACkB4D,EAClB,MAAMC,GAAWC,EAAAA,EAAAA,QAAuB,MAClCzF,GAAQyF,EAAAA,EAAAA,QAA2B,MAgCzC,OA9BAC,EAAAA,EAAAA,WAAU,KACR,IAAKF,EAASG,QAAS,OACvB3F,EAAM2F,SAAUC,EAAAA,EAAAA,IAAKJ,EAASG,SAC9B,MAAME,EAAW7F,EAAM2F,QAEjBG,EAtBYC,KAAA,IAAC,OAAEtE,EAAM,OAAEC,EAAM,MAAEmB,EAAK,UAAElB,GAA6BoE,EAAA,MAAM,CACjFC,MAAO,CAAEvF,KAAM,QAASuC,MAAM,GAC9BiD,KAAM,CAAE9E,IAAK,GAAID,MAAO,GAAIgF,MAAO,GAAIC,OAAQ,GAAIC,cAAc,GACjEC,MAAOzD,EAAenB,EAAQoB,GAC9ByD,QAAS9E,EAAiBC,EAAQC,EAAQC,GAC1C4E,OAAQ7C,EAAgBhC,KAiBH8E,CAAc,CAAE/E,SAAQC,SAAQmB,QAAOlB,cAE1DkE,EAASY,UAAUX,GACnBD,EAASY,UAAU,CAAE7B,QAAS7E,EAAqB8F,EAAUnE,EAAO4B,UAEpE,MAOMoD,EAAqBA,KACzBb,EAASc,SAPTd,EAASY,WAASG,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACfd,GAAU,IACblB,QAAS7E,EAAqB8F,EAAUnE,EAAO4B,YAWnD,OAFAuD,OAAOC,iBAAiB,SAAUJ,GAE3B,KACLG,OAAOE,oBAAoB,SAAUL,GACrCb,EAASmB,YAEV,CAACvF,EAAQC,EAAQmB,EAAOlB,IAEpB,CACL6D,a,aCpQJyB,EAAAA,EAAY,CACVC,EAAAA,EACAC,EAAAA,EACAC,EAAAA,EACAC,EAAAA,EACAC,EAAAA,EACAC,EAAAA,EACAC,EAAAA,IAGF,MAWA,EAX6BC,KAC3B,MAAMC,EDXN5E,KAEA,MAAM6E,EAAS7E,EAAK8E,QAAQC,KAAK,CAACC,EAAGC,KACnC,MAAMC,EAAKF,EAAEG,KAAKC,cAAcH,EAAEE,MAClC,OAAc,IAAPD,EAAWA,EAAKjJ,EAAY+I,EAAEK,OAASpJ,EAAYgJ,EAAEI,SAGxDC,EAAYT,EAAOU,OAA+B,CAACC,EAAKC,KAC5DD,EAAIC,EAAIN,OAASK,EAAIC,EAAIN,OAAS,GAAK,EAChCK,GACN,CAAC,GAEEE,EAAmC,CAAC,EACpCC,EAASd,EAAOU,OACpB,CAACK,EAAGC,KAA8B,IAA5B,KAAEV,EAAI,MAAEE,EAAK,MAAE/C,GAAOuD,EAC1BD,EAAIjH,OAAOgD,KAAK0D,GAChBO,EAAIhH,OAAO+C,KAAKW,GAEhBoD,EAASP,IAASO,EAASP,IAAS,GAAK,EACzC,MAAMW,EAAMjF,KAAKkF,KAAKT,EAAUH,GAAQ,GAKxC,OAHAS,EAAI7F,MAAM4B,KAAK+D,EAASP,KAAUW,EAAMX,EAAO,IAC/CS,EAAI/G,UAAU8C,KAAKwD,GAEZS,GAET,CAAEjH,OAAQ,GAAgBC,OAAQ,GAAgBmB,MAAO,GAAgBlB,UAAW,KAKtF,OAFAmH,QAAQC,IAAI,SAAUjG,EAAM2F,GAErBA,GCpBYO,CAAclK,IAC3B,SAAE0G,GAAaF,EAAkBoC,GAEvC,OACEuB,EAAAA,EAAAA,KAAA,OAAKnI,MAAO,CAAE6D,MAAO,OAAQuE,OAAQ,KAAMC,UACzCF,EAAAA,EAAAA,KAAA,OAAKG,IAAK5D,EAAU1E,MAAO,CAAE6D,MAAO,OAAQuE,OAAQ,a,iCC1B1D,MAAM,MAAEG,EAAK,KAAEC,GAASC,EAAAA,EAUxB,EARyBC,KACvBC,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CAACC,IAAK,EAAGC,MAAM,SAAQT,SAAA,EAC1BF,EAAAA,EAAAA,KAACY,EAAAA,EAAiB,CAAC/I,MAAO,CAAEqC,SAAU,GAAIhB,MAAO,cACjD8G,EAAAA,EAAAA,KAACI,EAAK,CAACS,MAAO,EAAGhJ,MAAO,CAAEsC,OAAQ,GAAI+F,SAAC,wBACvCF,EAAAA,EAAAA,KAACK,EAAI,CAAC7I,KAAK,YAAW0I,SAAC,sB,wBCT3B,QAAuB,cAAvB,EAA6C,eAA7C,EAAmE,cAAnE,EAAwF,cAAxF,EAA4G,aAA5G,EAAgI,cCI1HrG,EAAO,CACX,6NAGKuG,MAAK,EAAEC,KAAI,GAAIC,EAAAA,GAChB,KAACQ,GAAQC,EAAAA,EAYf,EAVoBC,KAClBR,EAAAA,EAAAA,MAACS,EAAAA,EAAI,CAACC,UAAWC,EAAYjB,SAAA,EAC3BF,EAAAA,EAAAA,KAACI,EAAK,CAACc,UAAWC,EAAcN,MAAO,EAAEX,SAAC,wBAC1CF,EAAAA,EAAAA,KAACe,EAAAA,EAAI,CAACG,UAAWC,EACfC,WAAYvH,EACZwH,WAAYC,IAAQd,EAAAA,EAAAA,MAACM,EAAI,CAACI,UAAWC,EAAYjB,SAAA,EAACF,EAAAA,EAAAA,KAAA,OAAKkB,UAAWC,IAAa,KAACnB,EAAAA,EAAAA,KAACK,EAAI,CAACa,UAAWC,EAAYjB,SAAEoB,YChBrH,EAA4B,mBCe5B,EARgCC,KAC9Bf,EAAAA,EAAAA,MAAA,OAAKU,UAAWC,EAAiBjB,SAAA,EAC/BF,EAAAA,EAAAA,KAACO,EAAM,KACPP,EAAAA,EAAAA,KAACxB,EAAU,KACXwB,EAAAA,EAAAA,KAACgB,EAAW,OCPhB,EAHkBQ,KACTxB,EAAAA,EAAAA,KAACuB,EAAa,G","sources":["components/TrendChart/constants.ts","components/TrendChart/handlers.ts","components/TrendChart/index.tsx","components/PipelineTrend/components/Header/index.tsx","webpack://pipeline-trend/./src/components/PipelineTrend/components/Description/index.module.less?ad29","components/PipelineTrend/components/Description/index.tsx","webpack://pipeline-trend/./src/components/PipelineTrend/index.module.less?1759","components/PipelineTrend/index.tsx","pages/dashboard.tsx"],"sourcesContent":["import type {ItemType} from './types' \n\nconst mockData: ItemType[] = [\n  { \"year\": \"2024\", \"month\": \"Jan\", \"value\": 0 },\n  { \"year\": \"2024\", \"month\": \"Feb\", \"value\": 121825 },\n  { \"year\": \"2024\", \"month\": \"Mar\", \"value\": 270360 },\n  { \"year\": \"2024\", \"month\": \"Apr\", \"value\": 55502 },\n  { \"year\": \"2024\", \"month\": \"May\", \"value\": 124809 },\n  { \"year\": \"2024\", \"month\": \"Jun\", \"value\": 9356 },\n  { \"year\": \"2024\", \"month\": \"Jul\", \"value\": 327102 },\n  { \"year\": \"2024\", \"month\": \"Aug\", \"value\": 152020 },\n  { \"year\": \"2024\", \"month\": \"Sep\", \"value\": 137550 },\n  { \"year\": \"2024\", \"month\": \"Oct\", \"value\": 342030 },\n  { \"year\": \"2024\", \"month\": \"Nov\", \"value\": 598309 },\n  { \"year\": \"2024\", \"month\": \"Dec\", \"value\": 365664 },\n  { \"year\": \"2025\", \"month\": \"Jan\", \"value\": 664117 },\n  { \"year\": \"2025\", \"month\": \"Feb\", \"value\": 1394574 },\n  { \"year\": \"2025\", \"month\": \"Mar\", \"value\": 345740 },\n  { \"year\": \"2025\", \"month\": \"Apr\", \"value\": 335975 },\n  { \"year\": \"2025\", \"month\": \"May\", \"value\": 82040 },\n  { \"year\": \"2025\", \"month\": \"Jun\", \"value\": 46880 }\n]\n\n\nconst MONTH_ORDER: Record<string, number> = {\n  Jan: 1, Feb: 2, Mar: 3, Apr: 4, May: 5, Jun: 6,\n  Jul: 7, Aug: 8, Sep: 9, Oct: 10, Nov: 11, Dec: 12,\n};\nexport{ mockData, MONTH_ORDER}","import { useRef, useEffect } from \"react\";\nimport { EChartsType, init, graphic } from 'echarts';\n\nimport { MONTH_ORDER } from \"./constants\";\nimport type { ItemType, TransfromDataType } from \"./types\";\n\n// 根据节点值返回对应颜色\nconst getPointColor = (val: number, maxVal: number): string => {\n  if (val === maxVal) return '#4CAF50';\n  return val > 300000 ? '#FFA726' : '#F44336';\n}\n\n\nconst transformData = (\n  data: ItemType[]\n): TransfromDataType =>  {\n  const sorted = data.slice().sort((a, b) => {\n    const yr = a.year.localeCompare(b.year);\n    return yr !== 0 ? yr : MONTH_ORDER[a.month] - MONTH_ORDER[b.month];\n  });\n\n  const yearCount = sorted.reduce<Record<string, number>>((cnt, cur) => {\n    cnt[cur.year] = (cnt[cur.year] || 0) + 1;\n    return cnt;\n  }, {});\n\n  const yearSeen: Record<string, number> = {};\n  const result = sorted.reduce(\n    (acc, { year, month, value }) => {\n      acc.months.push(month);\n      acc.values.push(value);\n\n      yearSeen[year] = (yearSeen[year] || 0) + 1;\n      const mid = Math.ceil(yearCount[year] / 2);\n\n      acc.years.push(yearSeen[year] === mid ? year : '');      \n      acc.fullYears.push(year);\n\n      return acc;\n    },\n    { months: [] as string[], values: [] as number[], years: [] as string[], fullYears: [] as string[] }\n  );\n\n  console.log('data: ', data, result)\n\n  return result\n}\n\n// 专门负责分隔线和年份文本的 Graphic 配置\nconst getSeparatorGraphics = (\n  chart: EChartsType,\n  valuesCount: number\n) =>  {\n  const p11 = chart.convertToPixel({ xAxisIndex: 0 }, 11);\n  const p12 = chart.convertToPixel({ xAxisIndex: 0 }, 12);\n  const midX = (p11 + p12) / 2;\n  const y0 = chart.convertToPixel({ yAxisIndex: 0 }, 0);\n  const y1 = y0 + 10;  // 月标签 margin\n  const y2 = y0 + 30;  // 年标签 margin\n  const labelOffset = 8;\n  const textY = y2 + labelOffset;\n\n  const pStart2024 = chart.convertToPixel({ xAxisIndex: 0 }, 0);\n  const pEnd2024   = chart.convertToPixel({ xAxisIndex: 0 }, 11);\n  const midX2024   = (pStart2024 + pEnd2024) / 2;\n\n  const pStart2025 = chart.convertToPixel({ xAxisIndex: 0 }, 12);\n  const pEnd2025   = chart.convertToPixel({ xAxisIndex: 0 }, valuesCount - 1);\n  const midX2025   = (pStart2025 + pEnd2025) / 2;\n\n  return [\n    {\n      type: 'line',\n      shape: { x1: midX, y1, x2: midX, y2 },\n      style: { stroke: '#ccc', lineWidth: 1 },\n      silent: true,\n    },\n    {\n      type: 'text',\n      left: midX2024,\n      top: textY,\n      style: { text: '2024', fill: '#999', font: 'bold 12px sans-serif', textAlign: 'center' },\n    },\n    {\n      type: 'text',\n      left: midX2025,\n      top: textY,\n      style: { text: '2025', fill: '#999', font: 'bold 12px sans-serif', textAlign: 'center' },\n    },\n  ];\n}\n\nconst getTooltipOption = (\n  months: string[],\n  values: number[],\n  fullYears: string[]\n): echarts.TooltipComponentOption => {\n  return {\n    trigger: 'item',\n    backgroundColor: '#fff',\n    borderColor: '#eee',\n    borderWidth: 1,\n    borderRadius: 8,\n    padding: [8, 12],\n    textStyle: { color: '#333', fontWeight: 'bold' },\n    extraCssText: 'box-shadow: 0 2px 8px rgba(0,0,0,0.15);',\n    formatter: (params: any) => {\n      const idx = params.dataIndex;\n      return `${fullYears[idx]} ${months[idx]}<br/>Pipeline: $${values[idx].toLocaleString()}`;\n    },\n  };\n}\n\nconst getXAxisOption = (months: string[], years: string[]): echarts.XAXisComponentOption[] =>  {\n  return [\n    {\n      type: 'category',\n      data: months,\n      axisTick: { show: false },\n      axisLine: { show: false },\n      axisLabel: { fontSize: 12, color: '#333', margin: 15, fontWeight: 'bold' },\n    },\n    {\n      type: 'category',\n      data: years,\n      axisTick: {\n        show: false,\n        alignWithLabel: true,\n        length: 6,\n        lineStyle: { color: '#ccc' },\n        interval: (idx: number) => years[idx] !== '',\n      },\n      axisLine: { show: false },\n      axisLabel: { show: false, fontSize: 12, color: '#999', margin: 40, fontWeight: 'bold' },\n      position: 'bottom',\n    },\n  ];\n}\n\nconst getSeriesOption = (values: number[]): echarts.SeriesOption[] => {\n  const maxVal = Math.max(...values);\n\n  // 灰色柱状图\n  const barSeries: echarts.SeriesOption = {\n    type: 'bar',\n    data: values,\n    barWidth: '60%',\n    barCategoryGap: '20%',\n    itemStyle: {\n      color: '#E9E9E9',\n      borderRadius: [6, 6, 6, 6],\n      shadowColor: 'rgba(0,0,0,0.05)',\n      shadowBlur: 5,\n    },\n    emphasis: {\n      itemStyle: { color: '#C0C0C0' }\n    },\n    z: 1,\n  };\n\n  // 按段绘制折线，每段渐变色\n  const lineSegments: echarts.SeriesOption[] = [];\n  for (let i = 0; i < values.length - 1; i++) {\n    const startColor = getPointColor(values[i], maxVal);\n    const endColor   = getPointColor(values[i + 1], maxVal);\n\n    lineSegments.push({\n      type: 'line',\n      data: [\n        [i, values[i]],\n        [i + 1, values[i + 1]],\n      ],\n      showSymbol: false,\n      lineStyle: {\n        width: 3,\n        color: new graphic.LinearGradient(0, 0, 1, 0, [\n          { offset: 0, color: startColor },\n          { offset: 1, color: endColor },\n        ])\n      },\n      z: 2,\n    });\n  }\n\n  // 圆点\n  lineSegments.push({\n    type: 'scatter',\n    data: values.map((v, idx) => [idx, v]),\n    symbol: 'circle',\n    symbolSize: 16,\n    itemStyle: {\n      opacity: 1,\n      color: (p: any) => getPointColor(p.value[1], maxVal),\n      borderColor: '#fff',\n      borderWidth: 0,\n    },\n    z: 3,\n    label: {\n      show: true,\n      position: 'top',\n      fontSize: 12,\n      fontWeight: 'bold',\n      formatter: (p: any) => p.value[1].toLocaleString(),\n    },\n  });\n\n  // 数值\n  lineSegments.push({\n    type: 'scatter',\n    data: values.map((v, idx) => ({\n      value: [idx, v],\n      label: {\n        show: true,\n        position: 'top',\n        fontSize: 12,\n        fontWeight: 'bold',\n        formatter: () => (v > 0 ? v.toLocaleString() : ''),\n      },\n    })),\n    symbol: 'none',\n    z: 4,\n  });\n\n  return [barSeries, ...lineSegments];\n}\n\nconst getBaseOption = ({ months, values, years, fullYears}: TransfromDataType) => ({\n  yAxis: { type: 'value', show: false },\n  grid: { top: 40, left: -60, right: 10, bottom: 80, containLabel: true },\n  xAxis: getXAxisOption(months, years),\n  tooltip: getTooltipOption(months, values, fullYears),\n  series: getSeriesOption(values),\n})\n\nconst usePipelineOption = ({\n  years,\n  months,\n  values,\n  fullYears\n}: TransfromDataType) =>{ \n  const chartRef = useRef<HTMLDivElement>(null);\n  const chart = useRef<EChartsType | null>(null);\n\n  useEffect(() => {\n    if (!chartRef.current) return;\n    chart.current = init(chartRef.current);\n    const chartIns = chart.current!;\n  \n    const baseOption = getBaseOption({ months, values, years, fullYears });\n  \n    chartIns.setOption(baseOption);\n    chartIns.setOption({ graphic: getSeparatorGraphics(chartIns, values.length) });\n\n    const drawGraphics = () => {\n      chartIns.setOption({\n        ...baseOption,\n        graphic: getSeparatorGraphics(chartIns, values.length),\n      });\n    };\n\n    const handleWindowResize = () => {\n      chartIns.resize()\n      drawGraphics()\n    };\n\n    window.addEventListener('resize', handleWindowResize);\n  \n    return () => {\n      window.removeEventListener('resize', handleWindowResize);\n      chartIns.dispose();\n    };\n  }, [months, values, years, fullYears]);\n\n  return {\n    chartRef\n  }\n}\n\nexport {\n  transformData,\n  usePipelineOption\n}","import React from 'react';\nimport * as echarts from 'echarts/core';\nimport {\n  TooltipComponent,\n  GridComponent,\n  DatasetComponent,\n  GraphicComponent,\n} from 'echarts/components';\nimport { LineChart, BarChart } from 'echarts/charts';\nimport { CanvasRenderer } from 'echarts/renderers';\n\nimport { mockData } from './constants';\nimport { transformData, usePipelineOption } from './handlers'\n\necharts.use([\n  TooltipComponent,\n  GridComponent,\n  LineChart,\n  BarChart,\n  DatasetComponent,\n  GraphicComponent,\n  CanvasRenderer,\n]);\n\nconst TrendChart: React.FC = () => {\n  const renderData = transformData(mockData)\n  const { chartRef} =  usePipelineOption(renderData)\n\n  return (\n    <div style={{ width: '100%', height: 420 }}>\n      <div ref={chartRef} style={{ width: '100%', height: '100%' }} />\n    </div>\n  );\n};\n\nexport default TrendChart;","\nimport React from 'react';\nimport { Flex, Typography } from 'antd';\nimport { AreaChartOutlined } from '@ant-design/icons';\nconst { Title, Text } = Typography;\n\nconst Header: React.FC = () => (\n  <Flex gap={8} align='center'>\n    <AreaChartOutlined style={{ fontSize: 24, color: '#FF4D4F' }} />\n    <Title level={4} style={{ margin: 0 }}>Pipeline Trend ($)</Title>\n    <Text type=\"secondary\">Last 12 months</Text>\n  </Flex>\n);\n\nexport default Header;","// extracted by mini-css-extract-plugin\nexport default {\"card\":\"card__zSTDE\",\"title\":\"title__l9pH6\",\"list\":\"list__zn5LH\",\"item\":\"item__lsfQN\",\"dot\":\"dot__WKWWE\",\"text\":\"text__WlDGA\"};","import React from 'react';\nimport { Card, Typography, List } from 'antd';\n\nimport styles from './index.module.less'\n\nconst data = [\n  \"Focus on High Pipeline Months: For 2024, continue leveraging strategies that led to high pipeline values in July, October, November, and December.For 2025, focus on maintaining the momentum from January and February.\"\n];\n\nconst {Title, Text} = Typography\nconst {Item} = List\n\nconst Description = () => (\n  <Card className={styles.card}>\n    <Title className={styles.title} level={5}>Next best actions:</Title>\n    <List className={styles.list}\n      dataSource={data}\n      renderItem={item => <Item className={styles.item}><div className={styles.dot}/> <Text className={styles.text}>{item}</Text></Item>}\n    />\n  </Card>\n);\n\nexport default Description;","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"container__MJAiI\"};","import React from 'react';\n\nimport Header from './components/Header';\nimport TrendChart from '../TrendChart';\nimport Description from './components/Description';\n\nimport styles from './index.module.less'\n\nconst PipelineTrend: React.FC = () => (\n  <div className={styles.container}>\n    <Header />\n    <TrendChart />\n    <Description />\n  </div>\n);\n\nexport default PipelineTrend;\n","import { PipelineTrend } from \"@/components\";\n\nconst Dashboard = () => {\n  return <PipelineTrend />\n}\nexport default Dashboard"],"names":["mockData","MONTH_ORDER","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec","getPointColor","val","maxVal","getSeparatorGraphics","chart","valuesCount","midX","convertToPixel","xAxisIndex","y0","yAxisIndex","y2","textY","type","shape","x1","y1","x2","style","stroke","lineWidth","silent","left","top","text","fill","font","textAlign","getTooltipOption","months","values","fullYears","trigger","backgroundColor","borderColor","borderWidth","borderRadius","padding","textStyle","color","fontWeight","extraCssText","formatter","params","idx","dataIndex","concat","toLocaleString","getXAxisOption","years","data","axisTick","show","axisLine","axisLabel","fontSize","margin","alignWithLabel","length","lineStyle","interval","position","getSeriesOption","Math","max","barSeries","barWidth","barCategoryGap","itemStyle","shadowColor","shadowBlur","emphasis","z","lineSegments","i","startColor","endColor","push","showSymbol","width","graphic","offset","map","v","symbol","symbolSize","opacity","p","value","label","usePipelineOption","_ref3","chartRef","useRef","useEffect","current","init","chartIns","baseOption","_ref2","yAxis","grid","right","bottom","containLabel","xAxis","tooltip","series","getBaseOption","setOption","handleWindowResize","resize","_objectSpread","window","addEventListener","removeEventListener","dispose","echarts","TooltipComponent","GridComponent","LineChart","BarChart","DatasetComponent","GraphicComponent","CanvasRenderer","TrendChart","renderData","sorted","slice","sort","a","b","yr","year","localeCompare","month","yearCount","reduce","cnt","cur","yearSeen","result","acc","_ref","mid","ceil","console","log","transformData","_jsx","height","children","ref","Title","Text","Typography","Header","_jsxs","Flex","gap","align","AreaChartOutlined","level","Item","List","Description","Card","className","styles","dataSource","renderItem","item","PipelineTrend","Dashboard"],"sourceRoot":""}